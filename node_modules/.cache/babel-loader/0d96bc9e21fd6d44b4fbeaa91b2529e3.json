{"ast":null,"code":"var _jsxFileName = \"/media/ueslei/8c30fe4f-7d20-4ae9-ab32-8dd7ef60dcdf/home/jumf/GitKraken/IEQ2023/src/components/player/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as C from './styles';\nimport { Play, Pause, SkipBack, SkipForward, RandomMusicsTrue, RandomMusicsFalse, VolumeOff, VolumeOn } from '../../svgs';\nimport { musics } from '../../data/data';\nimport { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Player = _ref => {\n  _s();\n\n  let {\n    id,\n    setId,\n    setIsFull,\n    isFull,\n    windowWidth\n  } = _ref;\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [volume, setVolume] = useState('1');\n  const [duration, setDuration] = useState(0);\n  const [isRandom, setIsRandom] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [isMuted, setIsMuted] = useState(false);\n  const audioTag = useRef(null);\n  const progressBar = useRef(null);\n  const animationRef = useRef(null);\n  useEffect(() => {\n    if (id !== '') {\n      if (isPlaying) {\n        audioTag.current.play();\n        animationRef.current = requestAnimationFrame(whilePlaying);\n        audioTag.current.volume = volume;\n\n        if (isMuted) {\n          audioTag.current.muted = true;\n        } else audioTag.current.muted = false;\n\n        const interval = setInterval(() => {\n          const seconds = Math.floor(audioTag.current.duration);\n          setDuration(seconds);\n          if (windowWidth >= 830 || isFull) progressBar.current.max = seconds;\n        }, 1000);\n        setInterval(() => {\n          if (duration > 0 || duration !== undefined) {\n            clearInterval(interval);\n\n            if (audioTag.current.currentTime === audioTag.current.duration) {\n              isRandom ? skipRandom() : skipForward();\n            }\n          }\n        }, 1100);\n      } else {\n        audioTag.current.pause();\n        audioTag.current.volume = volume;\n        cancelAnimationFrame(animationRef.current);\n      }\n    }\n  }, [[], isRandom]);\n\n  const calculateDuration = sec => {\n    const minutes = Math.floor(sec / 60);\n    const newMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`;\n    const seconds = Math.floor(sec % 60);\n    const newSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\n    return `${newMinutes}:${newSeconds}`;\n  };\n\n  const skipForward = () => {\n    if (id === '') {\n      alert('Choose a song!');\n    } else if (isRandom) {\n      skipRandom();\n    } else if (id === '9') {\n      setId('1');\n    } else {\n      const idNum = parseInt(id);\n      const newId = idNum + 1;\n      setId(newId.toString());\n    }\n  };\n\n  const skipRandom = () => {\n    const idNum = parseInt(id);\n    const randomNum = Math.floor(Math.random() * 9);\n\n    if (randomNum === 0 || randomNum === idNum) {\n      const newNum = randomNum + 1;\n      setId(newNum.toString());\n    } else {\n      setId(randomNum.toString());\n    }\n  };\n\n  const skipBack = () => {\n    if (id === '') {\n      alert('Choose a song!');\n    } else {\n      const idNum = parseInt(id);\n      const newId = idNum - 1;\n      setId(newId.toString());\n    }\n  };\n\n  const whilePlaying = () => {\n    if (windowWidth >= 830 || isFull) {\n      var _audioTag$current;\n\n      progressBar.current.value = audioTag === null || audioTag === void 0 ? void 0 : (_audioTag$current = audioTag.current) === null || _audioTag$current === void 0 ? void 0 : _audioTag$current.currentTime;\n      animationRef.current = requestAnimationFrame(whilePlaying);\n      changeCurrentTime();\n    }\n  };\n\n  const changeRange = () => {\n    if (windowWidth >= 830 || isFull) {\n      audioTag.current.currentTime = progressBar.current.value;\n      changeCurrentTime();\n    }\n  };\n\n  const changeCurrentTime = () => {\n    setCurrentTime(progressBar.current.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.Container, {\n    isFull: isFull,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"musicDiv\",\n      children: musics.map(music => id === music.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsFull(windowWidth <= 820 && !isFull),\n        className: \"music\",\n        children: [!isFull ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: music.album_img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: music.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: music.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true) : '', /*#__PURE__*/_jsxDEV(\"audio\", {\n          src: music.audio,\n          ref: audioTag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 33\n        }, this)]\n      }, music.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }, this) : '')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputButtons\",\n        children: [isFull || windowWidth >= 830 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progressBar\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"PcurrentTime\",\n            children: calculateDuration(currentTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            className: \"currentProgress\",\n            defaultValue: \"0\",\n            ref: progressBar,\n            onChange: changeRange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"Pduration\",\n            children: duration && !isNaN(duration) && calculateDuration(duration)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [windowWidth >= 830 || isFull ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsRandom(!isRandom),\n            className: \"randomMusicsButton\",\n            children: isRandom ? /*#__PURE__*/_jsxDEV(RandomMusicsTrue, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(RandomMusicsFalse, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this) : '', /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: skipBack,\n            children: /*#__PURE__*/_jsxDEV(SkipBack, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"playPause\",\n            onClick: () => setIsPlaying(!isPlaying),\n            children: isPlaying ? /*#__PURE__*/_jsxDEV(Pause, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 47\n            }, this) : /*#__PURE__*/_jsxDEV(Play, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: skipForward,\n            children: /*#__PURE__*/_jsxDEV(SkipForward, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), windowWidth > 825 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"volumeButton\",\n        onClick: () => setIsMuted(!isMuted),\n        children: isMuted ? /*#__PURE__*/_jsxDEV(VolumeOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(VolumeOn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        step: \"0.01\",\n        onChange: e => setVolume(e.target.value),\n        value: volume,\n        max: \"1\",\n        min: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Player, \"0a46R30skr/P2BggFeAVR2YYK7s=\");\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["C","Play","Pause","SkipBack","SkipForward","RandomMusicsTrue","RandomMusicsFalse","VolumeOff","VolumeOn","musics","useEffect","useRef","useState","Player","id","setId","setIsFull","isFull","windowWidth","isPlaying","setIsPlaying","volume","setVolume","duration","setDuration","isRandom","setIsRandom","currentTime","setCurrentTime","isMuted","setIsMuted","audioTag","progressBar","animationRef","current","play","requestAnimationFrame","whilePlaying","muted","interval","setInterval","seconds","Math","floor","max","undefined","clearInterval","skipRandom","skipForward","pause","cancelAnimationFrame","calculateDuration","sec","minutes","newMinutes","newSeconds","alert","idNum","parseInt","newId","toString","randomNum","random","newNum","skipBack","value","changeCurrentTime","changeRange","map","music","album_img","name","author","audio","isNaN","e","target"],"sources":["/media/ueslei/8c30fe4f-7d20-4ae9-ab32-8dd7ef60dcdf/home/jumf/GitKraken/IEQ2023/src/components/player/index.tsx"],"sourcesContent":["import * as C from './styles';\nimport { Play, Pause, SkipBack, SkipForward, RandomMusicsTrue, RandomMusicsFalse, VolumeOff, VolumeOn } from '../../svgs';\nimport { musics } from '../../data/data';\nimport { useEffect, useRef, useState } from 'react';\n\ntype Props = {\n    id: string;\n    isFull: boolean;\n    setId: (e: string) => void;\n    setIsFull: (e: boolean) => void;\n    windowWidth: number;\n}\n\nexport const Player = ({ id, setId, setIsFull, isFull, windowWidth }: Props) => {\n    const [isPlaying, setIsPlaying] = useState<boolean>(true)\n    const [volume, setVolume] = useState<string>('1')\n    const [duration, setDuration] = useState<number>(0)\n    const [isRandom, setIsRandom] = useState<boolean>(false)\n    const [currentTime, setCurrentTime] = useState<number>(0)\n    const [isMuted, setIsMuted] = useState<boolean>(false)\n\n    const audioTag = useRef(null)\n    const progressBar = useRef(null)\n    const animationRef = useRef(null)\n\n    useEffect(() => {\n        if (id !== '') {\n            if (isPlaying) {             \n                audioTag.current.play()              \n                animationRef.current = requestAnimationFrame(whilePlaying)               \n                audioTag.current.volume = volume \n\n                if (isMuted) {                    \n                    audioTag.current.muted = true\n\n                } else audioTag.current.muted = false\n\n                const interval = setInterval(() => {                    \n                    const seconds = Math.floor(audioTag.current.duration)\n                    setDuration(seconds)                                     \n                    if(windowWidth >= 830 || isFull) progressBar.current.max = seconds                    \n                }, 1000)\n\n                setInterval(() => {\n                    if (duration > 0 || duration !== undefined) {\n                        clearInterval(interval)\n                            \n                        if (audioTag.current.currentTime === audioTag.current.duration) {\n                                isRandom ? skipRandom() : skipForward()\n                         \n                            }\n                    }\n                }, 1100)\n\n            } else {               \n                audioTag.current.pause()                \n                audioTag.current.volume = volume                \n                cancelAnimationFrame(animationRef.current)\n            }\n        }\n    }, [[], isRandom])\n   \n    const calculateDuration = (sec: number) => {\n        const minutes = Math.floor(sec / 60)\n        const newMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`\n        const seconds = Math.floor(sec % 60)\n        const newSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`\n\n        return `${newMinutes}:${newSeconds}`\n    }   \n\n    const skipForward = () => {\n        if (id === '') {\n            alert('Choose a song!')        \n        } else if (isRandom) {\n            skipRandom()        \n        } else if (id === '9') {\n            setId('1')\n        } else {\n            const idNum = parseInt(id);\n            const newId = idNum + 1;\n            setId(newId.toString())\n        }\n    }\n\n    const skipRandom = () => {\n        const idNum = parseInt(id)\n        const randomNum = Math.floor(Math.random() * 9)\n        if (randomNum === 0 || randomNum === idNum) {\n            const newNum = randomNum + 1 \n            setId(newNum.toString())\n        } else {\n            setId(randomNum.toString())\n        }\n    }\n\n    const skipBack = () => {\n        if (id === '') {\n            alert('Choose a song!')        \n        } else {\n            const idNum = parseInt(id);\n            const newId = idNum - 1;\n            setId(newId.toString())\n        }\n    }\n\n    const whilePlaying = () => {\n        if (windowWidth >= 830 || isFull) {\n            progressBar.current.value = audioTag?.current?.currentTime\n            animationRef.current = requestAnimationFrame(whilePlaying)\n            changeCurrentTime()\n        }\n    }\n\n    const changeRange = () => {\n        if (windowWidth >= 830 || isFull) {\n            audioTag.current.currentTime = progressBar.current.value\n            changeCurrentTime()\n        }\n    }\n    \n    const changeCurrentTime = () => {\n        setCurrentTime(progressBar.current.value)\n    }\n    \n    return (\n        <C.Container isFull={isFull}>\n            \n            <div className='musicDiv'>\n                \n                   {musics.map(music => (\n                        \n                        id === music.id ?\n                        \n                            <div \n                            onClick={() => setIsFull(windowWidth <= 820 && !isFull)} className='music' key={music.id}>\n                                {!isFull ? \n                                <>\n                                    <img src={music.album_img} />\n                                    <div>\n                                        <h1>{music.name}</h1>\n                                        <h3>{music.author}</h3>\n                                    </div>\n                                </> \n                                : ''\n                                }\n                                <audio src={music.audio} ref={audioTag}/>\n                            </div>                         \n                    : ''\n                    ))\n                }\n            </div>\n            <div className='player'>\n                <div className='inputButtons'>\n                    { isFull || windowWidth >= 830 ? \n                        <div className='progressBar'>\n                            <p className='PcurrentTime'>\n                                {calculateDuration(currentTime)}\n                            </p>\n                            <input \n                                type=\"range\" \n                                className='currentProgress'\n                                defaultValue='0' \n                                ref={progressBar} \n                                onChange={changeRange}\n                            />\n                            \n                            <p className='Pduration'>\n                                {(duration && !isNaN(duration)) && \n                                calculateDuration(duration)}\n                            </p>\n                        </div> \n                        : ''\n                    }\n                    <div className='buttons'>\n                        { windowWidth >= 830 || isFull ? \n                        <button \n                            onClick={() => setIsRandom(!isRandom)} className='randomMusicsButton'>\n                            {isRandom ? <RandomMusicsTrue /> : <RandomMusicsFalse />}\n                        </button> \n                        : ''\n                        }\n                        <button onClick={skipBack}>\n                            <SkipBack />\n                        </button>\n                        <button \n                            className='playPause' \n                            onClick={() => setIsPlaying(!isPlaying)}>\n                                {isPlaying ?  <Pause /> : <Play />}\n                        </button>\n                        <button onClick={skipForward}>\n                            <SkipForward />\n                        </button>\n                        \n                    </div>\n                </div>\n            </div>\n\n            { windowWidth > 825 && \n                <div className='test'>\n                <button \n                    className='volumeButton' \n                    onClick={() => setIsMuted(!isMuted)}>\n                    {isMuted ? <VolumeOff/> : <VolumeOn />}\n                </button>\n                <input\n                    type=\"range\" \n                    step=\"0.01\"\n                    onChange={(e) => setVolume(e.target.value)} \n                    value={volume}\n                    max='1'\n                    min='0' \n                />\n                </div>\n            }\n        </C.Container>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}